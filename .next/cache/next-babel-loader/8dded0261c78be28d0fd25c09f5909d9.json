{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id: ID!) {\\n        scriptTagDelete(id: $id) {\\n            deletedScriptTagId\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        scriptTags(first: 5) {\\n            edges {\\n                node {\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n        shop {\\n            myshopifyDomain\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!) {\\n        scriptTagCreate(input: $input) {\\n           scriptTag {\\n             id\\n            }\\n           userErrors {\\n            field\\n            message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { ResourceList, TextField, Button, Card, Page, Layout, Stack, DisplayText, Icon, ButtonGroup, RadioButton, Sticky, Banner, ColorPicker, Toast, Frame } from '@shopify/polaris';\nimport './style.css';\nimport { useState } from 'react';\nimport { CircleAlertMajorMonotone, CircleTickMajorMonotone } from '@shopify/polaris-icons';\nimport axios from 'axios';\nimport $ from 'jquery';\nvar CREATE_SCRIPTTAG = gql(_templateObject());\nvar QUERY_SCRIPTTAGS = gql(_templateObject2());\nvar DELETE_SCRIPTTAG = gql(_templateObject3());\nvar urlScriptTags = \"https://73db43641e40.ngrok.io/test-script.js\";\n\nfunction ScriptPage() {\n  _s();\n\n  var _useState = useState(true),\n      stop = _useState[0],\n      setStop = _useState[1];\n\n  var _useMutation = useMutation(CREATE_SCRIPTTAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPTTAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScripts = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState2 = useState(false),\n      widgetEnabled = _useState2[0],\n      setWidgetEnabled = _useState2[1];\n\n  var _useState3 = useState({\n    button1: false,\n    button2: false,\n    button3: false,\n    button4: true\n  }),\n      pressedObject = _useState3[0],\n      setPressedObject = _useState3[1];\n\n  var _useState4 = useState({\n    button5: false,\n    button6: false,\n    button7: false,\n    button8: true\n  }),\n      pressedObject2 = _useState4[0],\n      setPressedObject2 = _useState4[1];\n\n  var _useState5 = useState(true),\n      mobileVal = _useState5[0],\n      setMobileVal = _useState5[1];\n\n  var _useState6 = useState(true),\n      desktopVal = _useState6[0],\n      setDesktopVal = _useState6[1];\n\n  var _useState7 = useState({\n    'yAxis': 'bottom',\n    'xAxis': 'right'\n  }),\n      positionDesktop = _useState7[0],\n      setPositionDesktop = _useState7[1];\n\n  var _useState8 = useState({\n    'yAxis': 'bottom',\n    'xAxis': 'right'\n  }),\n      positionMobile = _useState8[0],\n      setPositionMobile = _useState8[1];\n\n  var _useState9 = useState({\n    hue: 227,\n    brightness: 0.65,\n    saturation: 0.58\n  }),\n      color = _useState9[0],\n      setColor = _useState9[1];\n\n  function setColorPlus(col) {\n    setColor(col);\n    setWidget({\n      desktopPosition: positionDesktop,\n      mobilePosition: positionMobile,\n      notificationText: notificationValue,\n      notificationTimeout: timeoutValue,\n      notificationAvatar: avatarValue,\n      mobile: mobileVal,\n      desktop: desktopVal,\n      color: hslToHex(color.hue, color.saturation, color.brightness),\n      widgetEnabled: widgetEnabled\n    });\n  }\n\n  var _useState10 = useState({\n    desktopPosition: {\n      'yAxis': 'bottom',\n      'xAxis': 'right'\n    },\n    mobilePosition: {\n      'yAxis': 'bottom',\n      'xAxis': 'right'\n    },\n    notificationText: '[Join](https://discord.gg/3FKvVwH) our Discord Server!',\n    notificationTimeout: 2000,\n    notificationAvatar: 'https://cdn.discordapp.com/embed/avatars/0.png',\n    color: '#7289DA',\n    mobile: true,\n    desktop: true,\n    widgetEnabled: false\n  }),\n      widgetObj = _useState10[0],\n      setWidget = _useState10[1];\n\n  var _useState11 = useState(''),\n      valID = _useState11[0],\n      setValID = _useState11[1];\n\n  var _useState12 = useState(''),\n      channelID = _useState12[0],\n      setChannelID = _useState12[1];\n\n  var _useState13 = useState(true),\n      first = _useState13[0],\n      setFirst = _useState13[1];\n\n  var _useState14 = useState('[Join](https://discord.gg/3FKvVwH) our Discord Server!'),\n      notificationValue = _useState14[0],\n      setNotificationValue = _useState14[1];\n\n  var _useState15 = useState('2000'),\n      timeoutValue = _useState15[0],\n      setTimeoutValue = _useState15[1];\n\n  var _useState16 = useState('https://cdn.discordapp.com/embed/avatars/0.png'),\n      avatarValue = _useState16[0],\n      setAvatarValue = _useState16[1];\n\n  var _useState17 = useState(true),\n      desktopPreview = _useState17[0],\n      setDesktopPreview = _useState17[1];\n\n  var _useState18 = useState(true),\n      firstRender = _useState18[0],\n      setFirstRender = _useState18[1]; //toast\n\n\n  var _useState19 = useState(false),\n      active = _useState19[0],\n      setActive = _useState19[1];\n\n  var toastMarkup = active ? __jsx(\"div\", {\n    style: {\n      zIndex: '999'\n    }\n  }, __jsx(Toast, {\n    content: \"Settings Saved\",\n    onDismiss: function onDismiss() {\n      setActive(!active);\n    }\n  })) : null;\n\n  function buttonPressed(i) {\n    if (pressedObject[i] == true) return true;\n    return false;\n  }\n\n  function buttonPressed2(i) {\n    if (pressedObject2[i] == true) return true;\n    return false;\n  }\n\n  var handleClick = function handleClick(i) {\n    var pos = positionDesktop;\n    var pos2 = positionMobile;\n    if (buttonPressed(i)) return;else if (i == 'button1') {\n      setPressedObject({\n        button1: true,\n        button2: false,\n        button3: false,\n        button4: false\n      });\n      setPositionDesktop(pos = {\n        'yAxis': 'top',\n        'xAxis': 'left'\n      });\n    } else if (i == 'button2') {\n      setPressedObject({\n        button1: false,\n        button2: true,\n        button3: false,\n        button4: false\n      });\n      setPositionDesktop(pos = {\n        'yAxis': 'top',\n        'xAxis': 'right'\n      });\n    } else if (i == 'button3') {\n      setPressedObject({\n        button1: false,\n        button2: false,\n        button3: true,\n        button4: false\n      });\n      setPositionDesktop(pos = {\n        'yAxis': 'bottom',\n        'xAxis': 'left'\n      });\n    } else if (i == 'button4') {\n      setPressedObject(pos = {\n        button1: false,\n        button2: false,\n        button3: false,\n        button4: true\n      });\n      setPositionDesktop({\n        'yAxis': 'bottom',\n        'xAxis': 'right'\n      });\n    } else if (buttonPressed2(i)) return;else if (i == 'button5') {\n      setPressedObject2({\n        button5: true,\n        button6: false,\n        button7: false,\n        button8: false\n      });\n      setPositionMobile(pos2 = {\n        'yAxis': 'top',\n        'xAxis': 'left'\n      });\n    } else if (i == 'button6') {\n      setPressedObject2({\n        button5: false,\n        button6: true,\n        button7: false,\n        button8: false\n      });\n      setPositionMobile(pos2 = {\n        'yAxis': 'top',\n        'xAxis': 'right'\n      });\n    } else if (i == 'button7') {\n      setPressedObject2({\n        button5: false,\n        button6: false,\n        button7: true,\n        button8: false\n      });\n      setPositionMobile(pos2 = {\n        'yAxis': 'bottom',\n        'xAxis': 'left'\n      });\n    } else if (i == 'button8') {\n      setPressedObject2({\n        button5: false,\n        button6: false,\n        button7: false,\n        button8: true\n      });\n      setPositionMobile(pos2 = {\n        'yAxis': 'bottom',\n        'xAxis': 'right'\n      });\n    }\n    setWidget({\n      desktopPosition: pos,\n      mobilePosition: pos2,\n      notificationText: notificationValue,\n      notificationTimeout: timeoutValue,\n      notificationAvatar: avatarValue,\n      mobile: mobileVal,\n      desktop: desktopVal,\n      color: hslToHex(color.hue, color.saturation, color.brightness),\n      widgetEnabled: widgetEnabled\n    });\n  };\n\n  function returnIframe(desktop) {\n    //console.log(widgetObj)\n    if (valID != '') {\n      var script = document.createElement(\"script\");\n      script.id = \"widgetbotscript\";\n      script.type = \"text/javascript\";\n      script.src = \"https://cdn.jsdelivr.net/npm/@widgetbot/crate@3\";\n      script.text = \"\\n            var crate = new Crate({\\n                server: '\".concat(valID, \"', \\n                channel: '\").concat(channelID, \"', \\n                location: [\\\"\").concat(desktop ? widgetObj.desktopPosition.yAxis : widgetObj.mobilePosition.yAxis, \"\\\", \\\"\").concat(desktop ? widgetObj.desktopPosition.xAxis : widgetObj.mobilePosition.xAxis, \"\\\"],                                \\n                shard: 'https://e.widgetbot.io',                        \\n                color: '\").concat(widgetObj.color, \"',\\n                defer: true,                        \\n            })\\n            //crate.options.color = '#'+Math.random().toString(16).slice(2, 8);                                \\n            crate.notify({\\n                content: '\").concat(widgetObj.notificationText, \"',\\n                timeout: \").concat(widgetObj.notificationTimeout, \",\\n                avatar: '\").concat(widgetObj.notificationAvatar, \"'                        \\n              }) \\n            \");\n      if (document.getElementById('widgetbotiframe') != undefined) document.getElementById('widgetbotiframe').remove();\n      var iframe = document.createElement('iframe');\n      iframe.id = \"widgetbotiframe\";\n      iframe.width = \"100%\";\n      iframe.height = \"\".concat($(window).height() - 180, \"px\");\n      iframe.style.border = \"none\";\n      setTimeout(function () {\n        try {\n          iframe.contentDocument.getElementsByTagName('head')[0].appendChild(script);\n        } catch (_unused) {}\n      }, 500);\n      document.getElementById(\"previewdiv\").appendChild(iframe);\n    } else {\n      return __jsx(\"div\", null, __jsx(Banner, {\n        status: \"critical\",\n        title: \"Please go to Discordify Server/Channel ID and complete the setup first\"\n      }), __jsx(\"br\", null), __jsx(\"br\", null));\n    }\n  }\n\n  function returnFirstIframe() {\n    console.log(\"mare pula\"); //console.log(widgetObj)\n\n    if (firstRender) {\n      if (valID != '') {\n        var script = document.createElement(\"script\");\n        script.id = \"widgetbotscript\";\n        script.type = \"text/javascript\";\n        script.src = \"https://cdn.jsdelivr.net/npm/@widgetbot/crate@3\";\n        script.text = \"\\n                var crate = new Crate({\\n                    server: '\".concat(valID, \"', \\n                    channel: '\").concat(channelID, \"', \\n                    location: [\\\"\").concat(widgetObj.desktopPosition.yAxis, \"\\\", \\\"\").concat(widgetObj.desktopPosition.xAxis, \"\\\"],                                \\n                    shard: 'https://e.widgetbot.io',                        \\n                    color: '\").concat(widgetObj.color, \"',\\n                    defer: true,                        \\n                })\\n                //crate.options.color = '#'+Math.random().toString(16).slice(2, 8);                                \\n                crate.notify({\\n                    content: '\").concat(widgetObj.notificationText, \"',\\n                    timeout: \").concat(widgetObj.notificationTimeout, \",\\n                    avatar: '\").concat(widgetObj.notificationAvatar, \"'                        \\n                  }) \\n                \");\n        if (document.getElementById('widgetbotiframe') != undefined) document.getElementById('widgetbotiframe').remove();\n        var iframe = document.createElement('iframe');\n        iframe.id = \"widgetbotiframe\";\n        iframe.width = \"100%\";\n        iframe.height = \"\".concat($(window).height() - 180, \"px\");\n        iframe.style.border = \"none\";\n        setTimeout(function () {\n          try {\n            iframe.contentDocument.getElementsByTagName('head')[0].appendChild(script);\n          } catch (_unused2) {}\n        }, 500);\n        document.getElementById(\"previewdiv\").appendChild(iframe);\n      } else {\n        return __jsx(\"div\", null, __jsx(Banner, {\n          status: \"critical\",\n          title: \"Please go to Discordify Server/Channel ID and complete the setup first\"\n        }), __jsx(\"br\", null), __jsx(\"br\", null));\n      }\n\n      setTimeout(function () {\n        setFirstRender(false);\n      }, 100);\n    }\n  }\n\n  function makeApiCall(_x, _x2) {\n    return _makeApiCall.apply(this, arguments);\n  }\n\n  function _makeApiCall() {\n    _makeApiCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appInfo, sURL) {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"/api/widget/\".concat(sURL);\n              axios.post(url, appInfo).then(function (result) {})[\"catch\"](function (error) {\n                console.log(error.response);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _makeApiCall.apply(this, arguments);\n  }\n\n  function hexToHsl(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    var r = parseInt(result[1], 16);\n    var g = parseInt(result[2], 16);\n    var b = parseInt(result[3], 16);\n    r /= 255, g /= 255, b /= 255;\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n    var h,\n        s,\n        l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    s = s * 100;\n    s = Math.round(s);\n    l = l * 100;\n    l = Math.round(l);\n    h = Math.round(360 * h);\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  }\n\n  function hslToHex(h, s, l) {\n    h /= 360; //s /= 100;\n    //l /= 100;\n\n    var r, g, b;\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var hue2rgb = function hue2rgb(p, q, t) {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n      };\n\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    var toHex = function toHex(x) {\n      var hex = Math.round(x * 255).toString(16);\n      return hex.length === 1 ? '0' + hex : hex;\n    };\n\n    return \"#\".concat(toHex(r)).concat(toHex(g)).concat(toHex(b));\n  }\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  var shopURL = String(data.shop.myshopifyDomain).substr(0, String(data.shop.myshopifyDomain).length - 14);\n\n  if (first) {\n    axios.get(\"/api/discordID/\".concat(shopURL)).then(function (result) {\n      if (result.data.data.serverID != null) {\n        setValID(result.data.data.serverID);\n        setChannelID(result.data.data.channelID); //console.log(result.data.data.serverID);\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    fetch(\"/api/widget/\".concat(shopURL)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var widget = data.data; //console.log(widget)\n\n      if (widget != null) {\n        if (widget.desktopPosition.yAxis == 'top' && widget.desktopPosition.xAxis == 'left') {\n          setPressedObject({\n            button1: true,\n            button2: false,\n            button3: false,\n            button4: false\n          });\n          setPositionDesktop({\n            'yAxis': 'top',\n            'xAxis': 'left'\n          });\n        } else if (widget.desktopPosition.yAxis == 'top' && widget.desktopPosition.xAxis == 'right') {\n          setPressedObject({\n            button1: false,\n            button2: true,\n            button3: false,\n            button4: false\n          });\n          setPositionDesktop({\n            'yAxis': 'top',\n            'xAxis': 'right'\n          });\n        } else if (widget.desktopPosition.yAxis == 'bottom' && widget.desktopPosition.xAxis == 'left') {\n          setPressedObject({\n            button1: false,\n            button2: false,\n            button3: true,\n            button4: false\n          });\n          setPositionDesktop({\n            'yAxis': 'bottom',\n            'xAxis': 'left'\n          });\n        } else if (widget.desktopPosition.yAxis == 'bottom' && widget.desktopPosition.xAxis == 'right') {\n          setPressedObject({\n            button1: false,\n            button2: false,\n            button3: false,\n            button4: true\n          });\n          setPositionDesktop({\n            'yAxis': 'bottom',\n            'xAxis': 'right'\n          });\n        }\n\n        if (widget.mobilePosition.yAxis == 'top' && widget.mobilePosition.xAxis == 'left') {\n          setPressedObject2({\n            button5: true,\n            button6: false,\n            button7: false,\n            button8: false\n          });\n          setPositionMobile({\n            'yAxis': 'top',\n            'xAxis': 'left'\n          });\n        } else if (widget.mobilePosition.yAxis == 'top' && widget.mobilePosition.xAxis == 'right') {\n          setPressedObject2({\n            button4: false,\n            button6: true,\n            button7: false,\n            button8: false\n          });\n          setPositionMobile({\n            'yAxis': 'top',\n            'xAxis': 'right'\n          });\n        } else if (widget.mobilePosition.yAxis == 'bottom' && widget.mobilePosition.xAxis == 'left') {\n          setPressedObject2({\n            button5: false,\n            button6: false,\n            button7: true,\n            button8: false\n          });\n          setPositionMobile({\n            'yAxis': 'bottom',\n            'xAxis': 'left'\n          });\n        } else if (widget.mobilePosition.yAxis == 'bottom' && widget.mobilePosition.xAxis == 'right') {\n          setPressedObject2({\n            button5: false,\n            button6: false,\n            button7: false,\n            button8: true\n          });\n          setPositionMobile({\n            'yAxis': 'bottom',\n            'xAxis': 'right'\n          });\n        }\n\n        var ccolor = hexToHsl(widget.color);\n        setColorPlus({\n          hue: ccolor.h,\n          saturation: ccolor.s / 100,\n          brightness: ccolor.l / 100\n        });\n        setNotificationValue(widget.notificationText);\n        setTimeoutValue(widget.notificationTimeout);\n        setAvatarValue(widget.notificationAvatar);\n        setDesktopVal(widget.desktop);\n        setMobileVal(widget.mobile);\n        setWidgetEnabled(widget.widgetEnabled);\n      } //console.log(data.data);\n\n\n      setWidget({\n        desktopPosition: widget.desktopPosition,\n        mobilePosition: widget.mobilePosition,\n        notificationText: widget.notificationText,\n        notificationTimeout: widget.notificationTimeout,\n        notificationAvatar: widget.notificationAvatar,\n        mobile: widget.mobile,\n        desktop: widget.desktop,\n        color: widget.color,\n        widgetEnabled: widget.widgetEnabled\n      });\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    setFirst(false);\n  }\n\n  if (stop && data.scriptTags.edges[0] == undefined) {\n    console.log(\"dublu cacat\");\n    setStop(false);\n    createScripts({\n      variables: {\n        input: {\n          src: urlScriptTags,\n          displayScope: \"ALL\"\n        }\n      },\n      refetchQueries: [{\n        query: QUERY_SCRIPTTAGS\n      }]\n    });\n  }\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Widget Settings\"\n  }, __jsx(Layout, null, toastMarkup, __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(Stack, {\n    alignment: \"center\",\n    spacing: \"extraLoose\"\n  }, __jsx(Stack.Item, {\n    fill: true\n  }, widgetEnabled ? __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Icon, {\n    source: CircleTickMajorMonotone\n  }), __jsx(DisplayText, {\n    size: \"small\"\n  }, \"Discord Widget is \", __jsx(\"b\", {\n    style: {\n      color: '#50b83c'\n    }\n  }, \"enabled\"))) : __jsx(Stack, {\n    alignment: \"center\"\n  }, __jsx(Icon, {\n    source: CircleAlertMajorMonotone\n  }), __jsx(DisplayText, {\n    size: \"small\"\n  }, \"Discord Widget is \", __jsx(\"b\", {\n    style: {\n      color: '#de3618'\n    }\n  }, \"disabled\")))), __jsx(Stack.Item, null, __jsx(\"label\", {\n    className: \"switch\"\n  }, valID != '' ? __jsx(\"input\", {\n    type: \"checkbox\",\n    checked: widgetEnabled,\n    onChange: function onChange() {\n      if (valID != '') {\n        setWidgetEnabled(!widgetEnabled);\n        setWidget({\n          desktopPosition: positionDesktop,\n          mobilePosition: positionMobile,\n          notificationText: notificationValue,\n          notificationTimeout: timeoutValue,\n          notificationAvatar: avatarValue,\n          mobile: mobileVal,\n          desktop: desktopVal,\n          color: hslToHex(color.hue, color.brightness, color.saturation),\n          widgetEnabled: !widgetEnabled\n        });\n        makeApiCall({\n          desktopPosition: positionDesktop,\n          mobilePosition: positionMobile,\n          notificationText: notificationValue,\n          notificationTimeout: timeoutValue,\n          notificationAvatar: avatarValue,\n          mobile: mobileVal,\n          desktop: desktopVal,\n          color: hslToHex(color.hue, color.brightness, color.saturation),\n          widgetEnabled: !widgetEnabled\n        }, shopURL);\n      }\n    }\n  }) : '', valID != '' ? __jsx(\"span\", {\n    className: \"slider round\"\n  }) : '')))))), __jsx(\"br\", null), __jsx(Layout, null, __jsx(Layout.Section, {\n    secondary: true\n  }, __jsx(Card, {\n    sectioned: true,\n    title: __jsx(DisplayText, {\n      size: \"small\"\n    }, __jsx(\"b\", null, \"Device Settings\"))\n  }, __jsx(\"p\", null, \"Show on\"), __jsx(\"br\", null), __jsx(Stack, {\n    vertical: true\n  }, __jsx(RadioButton, {\n    label: \"Desktop\",\n    checked: desktopVal && !mobileVal,\n    onChange: function onChange() {\n      setWidget({\n        desktopPosition: positionDesktop,\n        mobilePosition: positionMobile,\n        notificationText: notificationValue,\n        notificationTimeout: timeoutValue,\n        notificationAvatar: avatarValue,\n        mobile: false,\n        desktop: true,\n        color: hslToHex(color.hue, color.saturation, color.brightness),\n        widgetEnabled: widgetEnabled\n      });\n      setMobileVal(false);\n      setDesktopVal(true);\n    }\n  }), __jsx(RadioButton, {\n    label: \"Mobile\",\n    checked: mobileVal && !desktopVal,\n    onChange: function onChange() {\n      setWidget({\n        desktopPosition: positionDesktop,\n        mobilePosition: positionMobile,\n        notificationText: notificationValue,\n        notificationTimeout: timeoutValue,\n        notificationAvatar: avatarValue,\n        mobile: true,\n        desktop: false,\n        color: hslToHex(color.hue, color.saturation, color.brightness),\n        widgetEnabled: widgetEnabled\n      });\n      setMobileVal(true);\n      setDesktopVal(false);\n    }\n  }), __jsx(RadioButton, {\n    label: \"Both\",\n    checked: desktopVal && mobileVal,\n    onChange: function onChange() {\n      setWidget({\n        desktopPosition: positionDesktop,\n        mobilePosition: positionMobile,\n        notificationText: notificationValue,\n        notificationTimeout: timeoutValue,\n        notificationAvatar: avatarValue,\n        mobile: true,\n        desktop: true,\n        color: hslToHex(color.hue, color.saturation, color.brightness),\n        widgetEnabled: widgetEnabled\n      });\n      setMobileVal(true);\n      setDesktopVal(true);\n    }\n  })), __jsx(\"br\", null), __jsx(Stack, {\n    spacing: \"extraTight\",\n    distribution: \"center\"\n  }, __jsx(DisplayText, {\n    size: \"small\"\n  }, \"Desktop Placement\"), __jsx(ButtonGroup, null, __jsx(Button, {\n    pressed: buttonPressed('button1'),\n    onClick: function onClick() {\n      handleClick('button1');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }))), __jsx(\"br\", null), __jsx(Button, {\n    pressed: buttonPressed('button2'),\n    onClick: function onClick() {\n      handleClick('button2');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }))))), __jsx(\"br\", null), __jsx(Stack, {\n    distribution: \"center\"\n  }, __jsx(ButtonGroup, null, __jsx(Button, {\n    pressed: buttonPressed('button3'),\n    onClick: function onClick() {\n      handleClick('button3');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }))), __jsx(\"br\", null), __jsx(Button, {\n    pressed: buttonPressed('button4'),\n    onClick: function onClick() {\n      handleClick('button4');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  }))))), __jsx(\"br\", null), __jsx(Stack, {\n    spacing: \"extraTight\",\n    distribution: \"center\"\n  }, __jsx(DisplayText, {\n    size: \"small\"\n  }, \"Mobile Placement\"), __jsx(ButtonGroup, null, __jsx(Button, {\n    pressed: buttonPressed2('button5'),\n    onClick: function onClick() {\n      handleClick('button5');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }))), __jsx(\"br\", null), __jsx(Button, {\n    pressed: buttonPressed2('button6'),\n    onClick: function onClick() {\n      handleClick('button6');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }))))), __jsx(\"br\", null), __jsx(Stack, {\n    distribution: \"center\"\n  }, __jsx(ButtonGroup, null, __jsx(Button, {\n    pressed: buttonPressed2('button7'),\n    onClick: function onClick() {\n      handleClick('button7');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }))), __jsx(\"br\", null), __jsx(Button, {\n    pressed: buttonPressed2('button8'),\n    onClick: function onClick() {\n      handleClick('button8');\n    }\n  }, __jsx(\"div\", {\n    className: \"grid-container\"\n  }, __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\"\n  }), __jsx(\"div\", {\n    className: \"grid-item\",\n    style: {\n      backgroundColor: '#7289DA'\n    }\n  })))))), __jsx(Card, {\n    sectioned: true,\n    title: __jsx(DisplayText, {\n      size: \"small\"\n    }, __jsx(\"b\", null, \"Appearance Settings\"))\n  }, __jsx(Stack, {\n    distribution: \"center\",\n    vertical: true\n  }, __jsx(ColorPicker, {\n    onChange: setColorPlus,\n    color: color\n  }), __jsx(Button, {\n    onClick: function onClick() {\n      setColorPlus({\n        hue: 227,\n        saturation: 0.58,\n        brightness: 0.65\n      });\n    }\n  }, \"Set Discord Purple Color\"))), __jsx(Card, {\n    title: __jsx(DisplayText, {\n      size: \"small\"\n    }, __jsx(\"b\", null, \"Widget Notifications\")),\n    sectioned: true\n  }, __jsx(TextField, {\n    label: \"Notification Text\",\n    value: notificationValue,\n    onChange: function onChange(val) {\n      setNotificationValue(val);\n      setWidget({\n        desktopPosition: positionDesktop,\n        mobilePosition: positionMobile,\n        notificationText: val,\n        notificationTimeout: timeoutValue,\n        notificationAvatar: avatarValue,\n        mobile: mobileVal,\n        desktop: desktopVal,\n        color: hslToHex(color.hue, color.brightness, color.saturation),\n        widgetEnabled: widgetEnabled\n      });\n    }\n  }), __jsx(\"br\", null), __jsx(\"p\", null, \"You can create hyperlinks using markdown like so: [text](link)\"), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Notification Timeout (miliseconds)\",\n    type: \"number\",\n    value: timeoutValue,\n    onChange: function onChange(val) {\n      setTimeoutValue(val);\n      setWidget({\n        desktopPosition: positionDesktop,\n        mobilePosition: positionMobile,\n        notificationText: notificationValue,\n        notificationTimeout: val,\n        notificationAvatar: avatarValue,\n        mobile: mobileVal,\n        desktop: desktopVal,\n        color: hslToHex(color.hue, color.brightness, color.saturation),\n        widgetEnabled: widgetEnabled\n      });\n    }\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    label: \"Notification Avatar URL\",\n    value: avatarValue,\n    onChange: function onChange(val) {\n      setAvatarValue(val);\n      setWidget({\n        desktopPosition: positionDesktop,\n        mobilePosition: positionMobile,\n        notificationText: notificationValue,\n        notificationTimeout: timeoutValue,\n        notificationAvatar: val,\n        mobile: mobileVal,\n        desktop: desktopVal,\n        color: hslToHex(color.hue, color.brightness, color.saturation),\n        widgetEnabled: widgetEnabled\n      });\n    }\n  }), __jsx(\"br\", null), __jsx(Button, {\n    onClick: function onClick() {\n      setAvatarValue('https://cdn.discordapp.com/embed/avatars/0.png');\n    }\n  }, \"Set Default Discord Logo Avatar\")), __jsx(Card, {\n    sectioned: true,\n    title: __jsx(DisplayText, {\n      size: \"small\"\n    }, __jsx(\"b\", null, \"Help and Contact\"))\n  }, __jsx(\"p\", null, \"For any kinds of issues or suggestions, you can email us at \", __jsx(\"b\", null, \"blazesoftworks7@gmail.com\")), __jsx(\"br\", null), __jsx(\"p\", null, \"We are not affiliated with either \", __jsx(\"i\", null, \"Widgetbot\"), \" or \", __jsx(\"i\", null, \"Discord\"), \". You can learn more about \", __jsx(\"i\", null, \"Widgetbot\"), \" and support them for extra features \", __jsx(\"b\", null, __jsx(\"a\", {\n    href: \"https://widgetbot.io/\",\n    target: \"_blank\"\n  }, \"here\")), \".\"))), __jsx(Layout.Section, null, __jsx(\"br\", null), __jsx(Sticky, {\n    offset: true\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: '#99aab5',\n      borderRadius: '10px'\n    }\n  }, __jsx(Stack, {\n    distribution: \"center\",\n    alignment: \"center\",\n    vertical: true\n  }, __jsx(DisplayText, {\n    size: \"small\"\n  }, \"Press the buttons bellow after every change to see the preview\")), __jsx(\"br\", null), __jsx(Stack, {\n    distribution: \"center\"\n  }, __jsx(ButtonGroup, {\n    segmented: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    pressed: desktopPreview,\n    onClick: function onClick() {\n      setDesktopPreview(true);\n\n      if (valID != '') {\n        returnIframe(true);\n        setFirstRender(false);\n      }\n    }\n  }, \"Generate Desktop\"), __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    pressed: !desktopPreview,\n    onClick: function onClick() {\n      setDesktopPreview(false);\n\n      if (valID != '') {\n        returnIframe(false);\n        setFirstRender(false);\n      }\n    }\n  }, \"Generate Mobile\")), returnFirstIframe()), __jsx(\"br\", null), __jsx(Stack, {\n    distribution: !desktopPreview ? \"center\" : \"fill\"\n  }, __jsx(\"div\", {\n    id: \"previewdiv\"\n  }))))), __jsx(\"div\", {\n    style: {\n      position: 'fixed',\n      zIndex: '99',\n      bottom: '0',\n      right: '0',\n      padding: '1rem',\n      height: '50px',\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'space-between',\n      background: '#F4F6F8',\n      borderTop: '1px solid #DFE3E8'\n    }\n  }, __jsx(\"div\", null), __jsx(Button, {\n    disabled: valID == '',\n    size: \"slim\",\n    primary: true,\n    onClick: function onClick() {\n      makeApiCall(widgetObj, shopURL);\n      setActive(true);\n    }\n  }, \"Save Settings\"))), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: '#f4f6f8',\n      width: '100%',\n      marginTop: '20px',\n      marginBottom: '77px',\n      padding: '20px 24px 20px 0px'\n    }\n  })));\n}\n\n_s(ScriptPage, \"HueYi6vQAjpOhldJnAFfGVAHu8k=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["D:/MyProjects/discord-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","ResourceList","TextField","Button","Card","Page","Layout","Stack","DisplayText","Icon","ButtonGroup","RadioButton","Sticky","Banner","ColorPicker","Toast","Frame","useState","CircleAlertMajorMonotone","CircleTickMajorMonotone","axios","$","CREATE_SCRIPTTAG","QUERY_SCRIPTTAGS","DELETE_SCRIPTTAG","urlScriptTags","ScriptPage","stop","setStop","createScripts","deleteScripts","loading","error","data","widgetEnabled","setWidgetEnabled","button1","button2","button3","button4","pressedObject","setPressedObject","button5","button6","button7","button8","pressedObject2","setPressedObject2","mobileVal","setMobileVal","desktopVal","setDesktopVal","positionDesktop","setPositionDesktop","positionMobile","setPositionMobile","hue","brightness","saturation","color","setColor","setColorPlus","col","setWidget","desktopPosition","mobilePosition","notificationText","notificationValue","notificationTimeout","timeoutValue","notificationAvatar","avatarValue","mobile","desktop","hslToHex","widgetObj","valID","setValID","channelID","setChannelID","first","setFirst","setNotificationValue","setTimeoutValue","setAvatarValue","desktopPreview","setDesktopPreview","firstRender","setFirstRender","active","setActive","toastMarkup","zIndex","buttonPressed","i","buttonPressed2","handleClick","pos","pos2","returnIframe","script","document","createElement","id","type","src","text","yAxis","xAxis","getElementById","undefined","remove","iframe","width","height","window","style","border","setTimeout","contentDocument","getElementsByTagName","appendChild","returnFirstIframe","console","log","makeApiCall","appInfo","sURL","url","post","then","result","response","hexToHsl","hex","exec","r","parseInt","g","b","max","Math","min","h","s","l","d","round","hue2rgb","p","q","t","toHex","x","toString","length","message","shopURL","String","shop","myshopifyDomain","substr","get","serverID","fetch","res","json","widget","ccolor","scriptTags","edges","variables","input","displayScope","refetchQueries","query","backgroundColor","val","borderRadius","position","bottom","right","padding","display","justifyContent","background","borderTop","flexDirection","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport { ResourceList, TextField, Button, Card, Page, Layout, Stack, DisplayText, Icon, ButtonGroup, RadioButton, Sticky, Banner, ColorPicker, Toast, Frame } from '@shopify/polaris'\r\nimport './style.css'\r\nimport { useState } from 'react';\r\nimport { CircleAlertMajorMonotone, CircleTickMajorMonotone } from '@shopify/polaris-icons';\r\nimport axios from 'axios'\r\nimport $ from 'jquery';\r\n\r\nconst CREATE_SCRIPTTAG = gql`\r\n    mutation scriptTagCreate($input: ScriptTagInput!) {\r\n        scriptTagCreate(input: $input) {\r\n           scriptTag {\r\n             id\r\n            }\r\n           userErrors {\r\n            field\r\n            message\r\n            }\r\n        }\r\n    }\r\n`\r\nconst QUERY_SCRIPTTAGS = gql`\r\n    query {\r\n        scriptTags(first: 5) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    src\r\n                    displayScope\r\n                }\r\n            }\r\n        }\r\n        shop {\r\n            myshopifyDomain\r\n        }\r\n    }\r\n`\r\nconst DELETE_SCRIPTTAG = gql`\r\n    mutation scriptTagDelete($id: ID!) {\r\n        scriptTagDelete(id: $id) {\r\n            deletedScriptTagId\r\n            userErrors {\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst urlScriptTags = `https://73db43641e40.ngrok.io/test-script.js`;\r\n\r\nfunction ScriptPage() {\r\n    const [stop, setStop] = useState(true)\r\n    const [createScripts] = useMutation(CREATE_SCRIPTTAG);\r\n    const [deleteScripts] = useMutation(DELETE_SCRIPTTAG);\r\n    const { loading, error, data } = useQuery(QUERY_SCRIPTTAGS);\r\n    const [widgetEnabled, setWidgetEnabled] = useState(false)\r\n    const [pressedObject, setPressedObject] = useState({\r\n        button1: false,\r\n        button2: false,\r\n        button3: false,\r\n        button4: true,\r\n    });\r\n    const [pressedObject2, setPressedObject2] = useState({\r\n        button5: false,\r\n        button6: false,\r\n        button7: false,\r\n        button8: true,\r\n    });\r\n    const [mobileVal, setMobileVal] = useState(true);\r\n    const [desktopVal, setDesktopVal] = useState(true);\r\n    const [positionDesktop, setPositionDesktop] = useState({\r\n        'yAxis': 'bottom',\r\n        'xAxis': 'right',\r\n    });\r\n    const [positionMobile, setPositionMobile] = useState({\r\n        'yAxis': 'bottom',\r\n        'xAxis': 'right',\r\n    });\r\n    const [color, setColor] = useState({\r\n        hue: 227,\r\n        brightness: 0.65,\r\n        saturation: 0.58,\r\n    });\r\n    function setColorPlus(col) {\r\n        setColor(col);\r\n        setWidget({\r\n            desktopPosition: positionDesktop,\r\n            mobilePosition: positionMobile,\r\n            notificationText: notificationValue,\r\n            notificationTimeout: timeoutValue,\r\n            notificationAvatar: avatarValue,\r\n            mobile: mobileVal,\r\n            desktop: desktopVal,\r\n            color: hslToHex(color.hue, color.saturation, color.brightness),\r\n            widgetEnabled: widgetEnabled\r\n        })\r\n    }\r\n    const [widgetObj, setWidget] = useState({\r\n        desktopPosition: {\r\n            'yAxis': 'bottom',\r\n            'xAxis': 'right',\r\n        },\r\n        mobilePosition: {\r\n            'yAxis': 'bottom',\r\n            'xAxis': 'right',\r\n        },\r\n        notificationText: '[Join](https://discord.gg/3FKvVwH) our Discord Server!',\r\n        notificationTimeout: 2000,\r\n        notificationAvatar: 'https://cdn.discordapp.com/embed/avatars/0.png',\r\n        color: '#7289DA',\r\n        mobile: true,\r\n        desktop: true,\r\n        widgetEnabled: false\r\n    });\r\n\r\n    const [valID, setValID] = useState('');\r\n    const [channelID, setChannelID] = useState('');\r\n    const [first, setFirst] = useState(true);\r\n\r\n    const [notificationValue, setNotificationValue] = useState('[Join](https://discord.gg/3FKvVwH) our Discord Server!');\r\n    const [timeoutValue, setTimeoutValue] = useState('2000');\r\n    const [avatarValue, setAvatarValue] = useState('https://cdn.discordapp.com/embed/avatars/0.png');\r\n\r\n    const [desktopPreview, setDesktopPreview] = useState(true);\r\n    const [firstRender, setFirstRender] = useState(true);\r\n\r\n    //toast\r\n    const [active, setActive] = useState(false);\r\n\r\n    const toastMarkup = active ? (\r\n        <div style={{ zIndex: '999' }}>\r\n            <Toast content=\"Settings Saved\" onDismiss={() => { setActive(!active) }} />\r\n        </div>\r\n    ) : null;\r\n\r\n    function buttonPressed(i) {\r\n        if (pressedObject[i] == true)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    function buttonPressed2(i) {\r\n        if (pressedObject2[i] == true)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    const handleClick = (i) => {\r\n        var pos = positionDesktop;\r\n        var pos2 = positionMobile;\r\n\r\n        if (buttonPressed(i))\r\n            return;\r\n        else if (i == 'button1') {\r\n            setPressedObject({ button1: true, button2: false, button3: false, button4: false, });\r\n            setPositionDesktop(pos = {\r\n                'yAxis': 'top',\r\n                'xAxis': 'left',\r\n            });\r\n        }\r\n        else if (i == 'button2') {\r\n            setPressedObject({ button1: false, button2: true, button3: false, button4: false, });\r\n            setPositionDesktop(pos = {\r\n                'yAxis': 'top',\r\n                'xAxis': 'right',\r\n            });\r\n        }\r\n        else if (i == 'button3') {\r\n            setPressedObject({ button1: false, button2: false, button3: true, button4: false, });\r\n            setPositionDesktop(pos = {\r\n                'yAxis': 'bottom',\r\n                'xAxis': 'left',\r\n            });\r\n        }\r\n        else if (i == 'button4') {\r\n            setPressedObject(pos = { button1: false, button2: false, button3: false, button4: true, });\r\n            setPositionDesktop({\r\n                'yAxis': 'bottom',\r\n                'xAxis': 'right',\r\n            });\r\n        }\r\n\r\n        else if (buttonPressed2(i))\r\n            return;\r\n        else if (i == 'button5') {\r\n            setPressedObject2({ button5: true, button6: false, button7: false, button8: false, });\r\n            setPositionMobile(pos2 = {\r\n                'yAxis': 'top',\r\n                'xAxis': 'left',\r\n            });\r\n        }\r\n        else if (i == 'button6') {\r\n            setPressedObject2({ button5: false, button6: true, button7: false, button8: false, });\r\n            setPositionMobile(pos2 = {\r\n                'yAxis': 'top',\r\n                'xAxis': 'right',\r\n            });\r\n        }\r\n        else if (i == 'button7') {\r\n            setPressedObject2({ button5: false, button6: false, button7: true, button8: false, });\r\n            setPositionMobile(pos2 = {\r\n                'yAxis': 'bottom',\r\n                'xAxis': 'left',\r\n            });\r\n        }\r\n        else if (i == 'button8') {\r\n            setPressedObject2({ button5: false, button6: false, button7: false, button8: true, });\r\n            setPositionMobile(pos2 = {\r\n                'yAxis': 'bottom',\r\n                'xAxis': 'right',\r\n            });\r\n        }\r\n\r\n        setWidget({\r\n            desktopPosition: pos,\r\n            mobilePosition: pos2,\r\n            notificationText: notificationValue,\r\n            notificationTimeout: timeoutValue,\r\n            notificationAvatar: avatarValue,\r\n            mobile: mobileVal,\r\n            desktop: desktopVal,\r\n            color: hslToHex(color.hue, color.saturation, color.brightness),\r\n            widgetEnabled: widgetEnabled\r\n        })\r\n    }\r\n\r\n    function returnIframe(desktop) {\r\n        //console.log(widgetObj)\r\n        if (valID != '') {\r\n            var script = document.createElement(\"script\");\r\n\r\n            script.id = \"widgetbotscript\"\r\n            script.type = \"text/javascript\";\r\n            script.src = \"https://cdn.jsdelivr.net/npm/@widgetbot/crate@3\";\r\n            script.text = `\r\n            var crate = new Crate({\r\n                server: '${valID}', \r\n                channel: '${channelID}', \r\n                location: [\"${(desktop) ? widgetObj.desktopPosition.yAxis : widgetObj.mobilePosition.yAxis}\", \"${(desktop) ? widgetObj.desktopPosition.xAxis : widgetObj.mobilePosition.xAxis}\"],                                \r\n                shard: 'https://e.widgetbot.io',                        \r\n                color: '${widgetObj.color}',\r\n                defer: true,                        \r\n            })\r\n            //crate.options.color = '#'+Math.random().toString(16).slice(2, 8);                                \r\n            crate.notify({\r\n                content: '${widgetObj.notificationText}',\r\n                timeout: ${widgetObj.notificationTimeout},\r\n                avatar: '${widgetObj.notificationAvatar}'                        \r\n              }) \r\n            `\r\n\r\n            if (document.getElementById('widgetbotiframe') != undefined)\r\n                document.getElementById('widgetbotiframe').remove();\r\n\r\n            var iframe = document.createElement('iframe');\r\n            iframe.id = \"widgetbotiframe\";\r\n            iframe.width = \"100%\";\r\n            iframe.height = `${$(window).height() - 180}px`;\r\n            iframe.style.border = \"none\";\r\n\r\n            setTimeout(() => {\r\n                try {\r\n                    iframe.contentDocument.getElementsByTagName('head')[0].appendChild(script);\r\n                } catch {\r\n\r\n                }\r\n            }, 500);\r\n\r\n            document.getElementById(\"previewdiv\").appendChild(iframe);\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <div>\r\n                    <Banner\r\n                        status=\"critical\"\r\n                        title=\"Please go to Discordify Server/Channel ID and complete the setup first\"\r\n                    >\r\n                    </Banner>\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function returnFirstIframe() {\r\n        console.log(\"mare pula\")\r\n        //console.log(widgetObj)\r\n        if (firstRender) {\r\n            if (valID != '') {\r\n                var script = document.createElement(\"script\");\r\n\r\n                script.id = \"widgetbotscript\"\r\n                script.type = \"text/javascript\";\r\n                script.src = \"https://cdn.jsdelivr.net/npm/@widgetbot/crate@3\";\r\n                script.text = `\r\n                var crate = new Crate({\r\n                    server: '${valID}', \r\n                    channel: '${channelID}', \r\n                    location: [\"${widgetObj.desktopPosition.yAxis}\", \"${widgetObj.desktopPosition.xAxis}\"],                                \r\n                    shard: 'https://e.widgetbot.io',                        \r\n                    color: '${widgetObj.color}',\r\n                    defer: true,                        \r\n                })\r\n                //crate.options.color = '#'+Math.random().toString(16).slice(2, 8);                                \r\n                crate.notify({\r\n                    content: '${widgetObj.notificationText}',\r\n                    timeout: ${widgetObj.notificationTimeout},\r\n                    avatar: '${widgetObj.notificationAvatar}'                        \r\n                  }) \r\n                `\r\n\r\n                if (document.getElementById('widgetbotiframe') != undefined)\r\n                    document.getElementById('widgetbotiframe').remove();\r\n\r\n                var iframe = document.createElement('iframe');\r\n                iframe.id = \"widgetbotiframe\";\r\n                iframe.width = \"100%\";\r\n                iframe.height = `${$(window).height() - 180}px`;\r\n                iframe.style.border = \"none\";\r\n\r\n                setTimeout(() => {\r\n                    try {\r\n                        iframe.contentDocument.getElementsByTagName('head')[0].appendChild(script);\r\n                    } catch{\r\n\r\n                    }\r\n                }, 500);\r\n\r\n                document.getElementById(\"previewdiv\").appendChild(iframe);\r\n            }\r\n            else {\r\n                return (\r\n                    <div>\r\n                        <Banner\r\n                            status=\"critical\"\r\n                            title=\"Please go to Discordify Server/Channel ID and complete the setup first\"\r\n                        >\r\n                        </Banner>\r\n                        <br />\r\n                        <br />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            setTimeout(() => {\r\n                setFirstRender(false);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    async function makeApiCall(appInfo, sURL) {\r\n        const url = `/api/widget/${sURL}`;\r\n\r\n        axios.post(url, appInfo).then((result) => { }).catch((error) => { console.log(error.response) });\r\n    }\r\n\r\n    function hexToHsl(hex) {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n        var r = parseInt(result[1], 16);\r\n        var g = parseInt(result[2], 16);\r\n        var b = parseInt(result[3], 16);\r\n\r\n        r /= 255, g /= 255, b /= 255;\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if (max == min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch (max) {\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        s = s * 100;\r\n        s = Math.round(s);\r\n        l = l * 100;\r\n        l = Math.round(l);\r\n        h = Math.round(360 * h);\r\n\r\n        return { h, s, l };\r\n    }\r\n\r\n    function hslToHex(h, s, l) {\r\n        h /= 360;\r\n        //s /= 100;\r\n        //l /= 100;\r\n        let r, g, b;\r\n        if (s === 0) {\r\n            r = g = b = l; // achromatic\r\n        } else {\r\n            const hue2rgb = (p, q, t) => {\r\n                if (t < 0) t += 1;\r\n                if (t > 1) t -= 1;\r\n                if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n                if (t < 1 / 2) return q;\r\n                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n                return p;\r\n            };\r\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            const p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1 / 3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1 / 3);\r\n        }\r\n        const toHex = x => {\r\n            const hex = Math.round(x * 255).toString(16);\r\n            return hex.length === 1 ? '0' + hex : hex;\r\n        };\r\n        return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n    }\r\n\r\n    if (loading) return <div>Loading...</div>\r\n    if (error) return <div>{error.message}</div>\r\n\r\n    const shopURL = String(data.shop.myshopifyDomain).substr(0, String(data.shop.myshopifyDomain).length - 14);\r\n\r\n    if (first) {\r\n        axios.get(`/api/discordID/${shopURL}`).then(result => {\r\n            if (result.data.data.serverID != null) {\r\n                setValID(result.data.data.serverID);\r\n                setChannelID(result.data.data.channelID);\r\n                //console.log(result.data.data.serverID);\r\n            }\r\n        }).catch(error => console.log(error));\r\n\r\n        fetch(`/api/widget/${shopURL}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                var widget = data.data;\r\n                //console.log(widget)\r\n                if (widget != null) {\r\n                    if (widget.desktopPosition.yAxis == 'top' && widget.desktopPosition.xAxis == 'left') {\r\n                        setPressedObject({ button1: true, button2: false, button3: false, button4: false, });\r\n                        setPositionDesktop({\r\n                            'yAxis': 'top',\r\n                            'xAxis': 'left',\r\n                        });\r\n                    }\r\n                    else if (widget.desktopPosition.yAxis == 'top' && widget.desktopPosition.xAxis == 'right') {\r\n                        setPressedObject({ button1: false, button2: true, button3: false, button4: false, });\r\n                        setPositionDesktop({\r\n                            'yAxis': 'top',\r\n                            'xAxis': 'right',\r\n                        });\r\n                    }\r\n                    else if (widget.desktopPosition.yAxis == 'bottom' && widget.desktopPosition.xAxis == 'left') {\r\n                        setPressedObject({ button1: false, button2: false, button3: true, button4: false, });\r\n                        setPositionDesktop({\r\n                            'yAxis': 'bottom',\r\n                            'xAxis': 'left',\r\n                        });\r\n                    }\r\n                    else if (widget.desktopPosition.yAxis == 'bottom' && widget.desktopPosition.xAxis == 'right') {\r\n                        setPressedObject({ button1: false, button2: false, button3: false, button4: true, });\r\n                        setPositionDesktop({\r\n                            'yAxis': 'bottom',\r\n                            'xAxis': 'right',\r\n                        });\r\n                    }\r\n\r\n                    if (widget.mobilePosition.yAxis == 'top' && widget.mobilePosition.xAxis == 'left') {\r\n                        setPressedObject2({ button5: true, button6: false, button7: false, button8: false, });\r\n                        setPositionMobile({\r\n                            'yAxis': 'top',\r\n                            'xAxis': 'left',\r\n                        });\r\n                    }\r\n                    else if (widget.mobilePosition.yAxis == 'top' && widget.mobilePosition.xAxis == 'right') {\r\n                        setPressedObject2({ button4: false, button6: true, button7: false, button8: false, });\r\n                        setPositionMobile({\r\n                            'yAxis': 'top',\r\n                            'xAxis': 'right',\r\n                        });\r\n                    }\r\n                    else if (widget.mobilePosition.yAxis == 'bottom' && widget.mobilePosition.xAxis == 'left') {\r\n                        setPressedObject2({ button5: false, button6: false, button7: true, button8: false, });\r\n                        setPositionMobile({\r\n                            'yAxis': 'bottom',\r\n                            'xAxis': 'left',\r\n                        });\r\n                    }\r\n                    else if (widget.mobilePosition.yAxis == 'bottom' && widget.mobilePosition.xAxis == 'right') {\r\n                        setPressedObject2({ button5: false, button6: false, button7: false, button8: true, });\r\n                        setPositionMobile({\r\n                            'yAxis': 'bottom',\r\n                            'xAxis': 'right',\r\n                        });\r\n                    }\r\n\r\n                    var ccolor = hexToHsl(widget.color);\r\n                    setColorPlus({ hue: ccolor.h, saturation: (ccolor.s / 100), brightness: (ccolor.l / 100) });\r\n                    setNotificationValue(widget.notificationText)\r\n                    setTimeoutValue(widget.notificationTimeout)\r\n                    setAvatarValue(widget.notificationAvatar)\r\n                    setDesktopVal(widget.desktop)\r\n                    setMobileVal(widget.mobile)\r\n                    setWidgetEnabled(widget.widgetEnabled)\r\n                }\r\n\r\n                //console.log(data.data);\r\n\r\n                setWidget({\r\n                    desktopPosition: widget.desktopPosition,\r\n                    mobilePosition: widget.mobilePosition,\r\n                    notificationText: widget.notificationText,\r\n                    notificationTimeout: widget.notificationTimeout,\r\n                    notificationAvatar: widget.notificationAvatar,\r\n                    mobile: widget.mobile,\r\n                    desktop: widget.desktop,\r\n                    color: widget.color,\r\n                    widgetEnabled: widget.widgetEnabled\r\n                })\r\n\r\n            }).catch(error => console.log(error));\r\n        setFirst(false);\r\n    }\r\n\r\n    if (stop && data.scriptTags.edges[0] == undefined) {\r\n        console.log(\"dublu cacat\")\r\n        setStop(false);\r\n        createScripts({\r\n            variables: {\r\n                input: {\r\n                    src: urlScriptTags,\r\n                    displayScope: \"ALL\"\r\n                }\r\n            },\r\n            refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Frame>\r\n            <Page title=\"Widget Settings\" >\r\n                <Layout>\r\n                    {toastMarkup}\r\n                    <Layout.Section>\r\n                        <Card sectioned>\r\n                            <Stack alignment=\"center\" spacing=\"extraLoose\">\r\n                                <Stack.Item fill>\r\n                                    {(widgetEnabled) ? <Stack alignment=\"center\"><Icon source={CircleTickMajorMonotone} /><DisplayText size=\"small\">Discord Widget is <b style={{ color: '#50b83c' }}>enabled</b></DisplayText></Stack> : <Stack alignment=\"center\"><Icon source={CircleAlertMajorMonotone} /><DisplayText size=\"small\">Discord Widget is <b style={{ color: '#de3618' }}>disabled</b></DisplayText></Stack>}\r\n                                </Stack.Item>\r\n                                <Stack.Item>\r\n                                    <label className=\"switch\">\r\n                                        {(valID != '') ?\r\n                                            <input type=\"checkbox\" checked={widgetEnabled} onChange={() => {\r\n                                                if (valID != '') {\r\n                                                    setWidgetEnabled(!widgetEnabled)\r\n                                                    setWidget({\r\n                                                        desktopPosition: positionDesktop,\r\n                                                        mobilePosition: positionMobile,\r\n                                                        notificationText: notificationValue,\r\n                                                        notificationTimeout: timeoutValue,\r\n                                                        notificationAvatar: avatarValue,\r\n                                                        mobile: mobileVal,\r\n                                                        desktop: desktopVal,\r\n                                                        color: hslToHex(color.hue, color.brightness, color.saturation),\r\n                                                        widgetEnabled: !widgetEnabled\r\n                                                    });\r\n                                                    makeApiCall({\r\n                                                        desktopPosition: positionDesktop,\r\n                                                        mobilePosition: positionMobile,\r\n                                                        notificationText: notificationValue,\r\n                                                        notificationTimeout: timeoutValue,\r\n                                                        notificationAvatar: avatarValue,\r\n                                                        mobile: mobileVal,\r\n                                                        desktop: desktopVal,\r\n                                                        color: hslToHex(color.hue, color.brightness, color.saturation),\r\n                                                        widgetEnabled: !widgetEnabled\r\n                                                    }, shopURL);\r\n                                                }\r\n                                            }} />\r\n                                            : ''}\r\n                                        {(valID != '') ? <span className=\"slider round\"></span> : ''}\r\n                                    </label>\r\n                                </Stack.Item>\r\n                            </Stack>\r\n                        </Card>\r\n                    </Layout.Section>\r\n                </Layout>\r\n                <br />\r\n                <Layout>\r\n                    <Layout.Section secondary>\r\n                        <Card sectioned title={<DisplayText size=\"small\"><b>Device Settings</b></DisplayText>}>\r\n                            <p>Show on</p>\r\n                            <br />\r\n                            <Stack vertical>\r\n                                <RadioButton\r\n                                    label=\"Desktop\"\r\n                                    checked={desktopVal && !mobileVal}\r\n                                    onChange={() => {\r\n                                        setWidget({\r\n                                            desktopPosition: positionDesktop,\r\n                                            mobilePosition: positionMobile,\r\n                                            notificationText: notificationValue,\r\n                                            notificationTimeout: timeoutValue,\r\n                                            notificationAvatar: avatarValue,\r\n                                            mobile: false,\r\n                                            desktop: true,\r\n                                            color: hslToHex(color.hue, color.saturation, color.brightness),\r\n                                            widgetEnabled: widgetEnabled\r\n                                        })\r\n                                        setMobileVal(false);\r\n                                        setDesktopVal(true);\r\n                                    }}\r\n                                />\r\n                                <RadioButton\r\n                                    label=\"Mobile\"\r\n                                    checked={mobileVal && !desktopVal}\r\n                                    onChange={() => {\r\n                                        setWidget({\r\n                                            desktopPosition: positionDesktop,\r\n                                            mobilePosition: positionMobile,\r\n                                            notificationText: notificationValue,\r\n                                            notificationTimeout: timeoutValue,\r\n                                            notificationAvatar: avatarValue,\r\n                                            mobile: true,\r\n                                            desktop: false,\r\n                                            color: hslToHex(color.hue, color.saturation, color.brightness),\r\n                                            widgetEnabled: widgetEnabled\r\n                                        })\r\n                                        setMobileVal(true);\r\n                                        setDesktopVal(false);\r\n                                    }}\r\n                                />\r\n                                <RadioButton\r\n                                    label=\"Both\"\r\n                                    checked={desktopVal && mobileVal}\r\n                                    onChange={() => {\r\n                                        setWidget({\r\n                                            desktopPosition: positionDesktop,\r\n                                            mobilePosition: positionMobile,\r\n                                            notificationText: notificationValue,\r\n                                            notificationTimeout: timeoutValue,\r\n                                            notificationAvatar: avatarValue,\r\n                                            mobile: true,\r\n                                            desktop: true,\r\n                                            color: hslToHex(color.hue, color.saturation, color.brightness),\r\n                                            widgetEnabled: widgetEnabled\r\n                                        })\r\n                                        setMobileVal(true);\r\n                                        setDesktopVal(true);\r\n                                    }}\r\n                                />\r\n                            </Stack>\r\n                            <br />\r\n                            <Stack spacing=\"extraTight\" distribution=\"center\">\r\n                                <DisplayText size=\"small\">Desktop Placement</DisplayText>\r\n                                <ButtonGroup>\r\n                                    <Button pressed={buttonPressed('button1')} onClick={() => { handleClick('button1') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                    <br />\r\n                                    <Button pressed={buttonPressed('button2')} onClick={() => { handleClick('button2') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Stack>\r\n                            <br />\r\n                            <Stack distribution=\"center\">\r\n                                <ButtonGroup>\r\n                                    <Button pressed={buttonPressed('button3')} onClick={() => { handleClick('button3') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                    <br />\r\n                                    <Button pressed={buttonPressed('button4')} onClick={() => { handleClick('button4') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Stack>\r\n                            <br />\r\n                            <Stack spacing=\"extraTight\" distribution=\"center\">\r\n                                <DisplayText size=\"small\">Mobile Placement</DisplayText>\r\n                                <ButtonGroup>\r\n                                    <Button pressed={buttonPressed2('button5')} onClick={() => { handleClick('button5') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                    <br />\r\n                                    <Button pressed={buttonPressed2('button6')} onClick={() => { handleClick('button6') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Stack>\r\n                            <br />\r\n                            <Stack distribution=\"center\">\r\n                                <ButtonGroup>\r\n                                    <Button pressed={buttonPressed2('button7')} onClick={() => { handleClick('button7') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                    <br />\r\n                                    <Button pressed={buttonPressed2('button8')} onClick={() => { handleClick('button8') }}>\r\n                                        <div className=\"grid-container\">\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\"></div>\r\n                                            <div className=\"grid-item\" style={{ backgroundColor: '#7289DA' }}></div>\r\n                                        </div>\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Stack>\r\n                        </Card>\r\n                        <Card sectioned title={<DisplayText size=\"small\"><b>Appearance Settings</b></DisplayText>}>\r\n                            <Stack distribution=\"center\" vertical >\r\n                                <ColorPicker onChange={setColorPlus} color={color} />\r\n                                <Button onClick={() => {\r\n                                    setColorPlus({ hue: 227, saturation: 0.58, brightness: 0.65 });\r\n                                }}>\r\n                                    Set Discord Purple Color\r\n                                </Button>\r\n                            </Stack>\r\n\r\n                            {/* <p>Widget Logo</p>\r\n                        <br />\r\n                        <div style={{ backgroundColor: '#99aab5', borderRadius: '10px' }}>\r\n                            <Stack spacing=\"tight\" distribution=\"center\" alignment=\"center\">\r\n                                <img className=\"not-select\" src=\"https://discord.com/assets/1c8a54f25d101bdc607cec7228247a9a.svg\" onClick={() => {\r\n                                    setWidget({\r\n                                        desktopPosition: positionDesktop,\r\n                                        mobilePosition: positionMobile,\r\n                                        logo: 'https://discord.com/assets/1c8a54f25d101bdc607cec7228247a9a.svg',\r\n                                        theme: themeName,\r\n                                        mobile: mobileVal,\r\n                                        desktop: desktopVal\r\n                                    })\r\n                                    setLogoPressedObject({ logo1: true, logo2: false, logo3: false });\r\n                                    setLogoUrl('https://discord.com/assets/1c8a54f25d101bdc607cec7228247a9a.svg');\r\n                                }} width={(logoPressedObject.logo1) ? \"80\" : \"60\"} />\r\n                                <img className=\"not-select\" src=\"https://discord.com/assets/41484d92c876f76b20c7f746221e8151.svg\" onClick={() => {\r\n                                    setWidget({\r\n                                        desktopPosition: positionDesktop,\r\n                                        mobilePosition: positionMobile,\r\n                                        logo: 'https://discord.com/assets/41484d92c876f76b20c7f746221e8151.svg',\r\n                                        theme: themeName,\r\n                                        mobile: mobileVal,\r\n                                        desktop: desktopVal\r\n                                    })\r\n                                    setLogoPressedObject({ logo1: false, logo2: true, logo3: false });\r\n                                    setLogoUrl('https://discord.com/assets/41484d92c876f76b20c7f746221e8151.svg');\r\n                                }} width={(logoPressedObject.logo2) ? \"80\" : \"60\"} />\r\n                                <img className=\"not-select\" src=\"https://discord.com/assets/f8389ca1a741a115313bede9ac02e2c0.svg\" onClick={() => {\r\n                                    setWidget({\r\n                                        desktopPosition: positionDesktop,\r\n                                        mobilePosition: positionMobile,\r\n                                        logo: 'https://discord.com/assets/f8389ca1a741a115313bede9ac02e2c0.svg',\r\n                                        theme: themeName,\r\n                                        mobile: mobileVal,\r\n                                        desktop: desktopVal\r\n                                    })\r\n                                    setLogoPressedObject({ logo1: false, logo2: false, logo3: true });\r\n                                    setLogoUrl('https://discord.com/assets/f8389ca1a741a115313bede9ac02e2c0.svg');\r\n                                }} width={(logoPressedObject.logo3) ? \"80\" : \"60\"} />\r\n                            </Stack>\r\n                        </div>\r\n                        <br />\r\n                        <p>Widget Theme</p>\r\n                        <br />\r\n                        <ButtonGroup segmented>\r\n                            <Button pressed={themeDark} onClick={() => {\r\n                                setWidget({\r\n                                    desktopPosition: positionDesktop,\r\n                                    mobilePosition: positionMobile,\r\n                                    logo: logoUrl,\r\n                                    theme: 'dark',\r\n                                    mobile: mobileVal,\r\n                                    desktop: desktopVal\r\n                                })\r\n                                setThemeName(\"dark\");\r\n                                setThemeDark(true);\r\n                            }}>Dark</Button>\r\n                            <Button pressed={!themeDark} onClick={() => {\r\n                                setWidget({\r\n                                    desktopPosition: positionDesktop,\r\n                                    mobilePosition: positionMobile,\r\n                                    logo: logoUrl,\r\n                                    theme: 'light',\r\n                                    mobile: mobileVal,\r\n                                    desktop: desktopVal\r\n                                })\r\n                                setThemeName(\"light\");\r\n                                setThemeDark(false);\r\n                            }}>Light</Button>\r\n                        </ButtonGroup> */}\r\n                        </Card>\r\n                        {/* <Card sectioned title={<DisplayText size=\"small\"><b>Discount for Joining Server</b></DisplayText>}>\r\n                            <Button primary onClick={() => {\r\n                                createDiscount({\r\n                                    variables: {\r\n                                        basicCodeDiscount: {\r\n                                            appliesOncePerCustomer: true,\r\n                                            code: \"DISCORD10\",\r\n                                            customerSelection: {\r\n                                                all: true\r\n                                            },\r\n                                            customerGets: {\r\n                                                items: {\r\n                                                    all: true\r\n                                                },\r\n                                                value: {\r\n                                                    percentage: 0.1\r\n                                                }\r\n                                            },\r\n                                            title: \"Discord Discount\",\r\n                                            usageLimit: 1,\r\n                                            startsAt: \"2019-07-03T20:47:55Z\"\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }}>\r\n                                Create Discount\r\n                        </Button>\r\n                        </Card> */}\r\n                        <Card title={<DisplayText size=\"small\"><b>Widget Notifications</b></DisplayText>} sectioned>\r\n                            <TextField label=\"Notification Text\" value={notificationValue} onChange={(val) => {\r\n                                setNotificationValue(val);\r\n                                setWidget({\r\n                                    desktopPosition: positionDesktop,\r\n                                    mobilePosition: positionMobile,\r\n                                    notificationText: val,\r\n                                    notificationTimeout: timeoutValue,\r\n                                    notificationAvatar: avatarValue,\r\n                                    mobile: mobileVal,\r\n                                    desktop: desktopVal,\r\n                                    color: hslToHex(color.hue, color.brightness, color.saturation),\r\n                                    widgetEnabled: widgetEnabled\r\n                                });\r\n                            }} />\r\n                            <br />\r\n                            <p>You can create hyperlinks using markdown like so: [text](link)</p>\r\n                            <br />\r\n                            <TextField label=\"Notification Timeout (miliseconds)\" type=\"number\" value={timeoutValue} onChange={(val) => {\r\n                                setTimeoutValue(val);\r\n                                setWidget({\r\n                                    desktopPosition: positionDesktop,\r\n                                    mobilePosition: positionMobile,\r\n                                    notificationText: notificationValue,\r\n                                    notificationTimeout: val,\r\n                                    notificationAvatar: avatarValue,\r\n                                    mobile: mobileVal,\r\n                                    desktop: desktopVal,\r\n                                    color: hslToHex(color.hue, color.brightness, color.saturation),\r\n                                    widgetEnabled: widgetEnabled\r\n                                });\r\n                            }} />\r\n                            <br />\r\n                            <TextField label=\"Notification Avatar URL\" value={avatarValue} onChange={(val) => {\r\n                                setAvatarValue(val);\r\n                                setWidget({\r\n                                    desktopPosition: positionDesktop,\r\n                                    mobilePosition: positionMobile,\r\n                                    notificationText: notificationValue,\r\n                                    notificationTimeout: timeoutValue,\r\n                                    notificationAvatar: val,\r\n                                    mobile: mobileVal,\r\n                                    desktop: desktopVal,\r\n                                    color: hslToHex(color.hue, color.brightness, color.saturation),\r\n                                    widgetEnabled: widgetEnabled\r\n                                });\r\n                            }} />\r\n                            <br />\r\n                            <Button onClick={() => { setAvatarValue('https://cdn.discordapp.com/embed/avatars/0.png') }}>Set Default Discord Logo Avatar</Button>\r\n                        </Card>\r\n\r\n                        <Card sectioned title={<DisplayText size=\"small\"><b>Help and Contact</b></DisplayText>}>\r\n                            <p>For any kinds of issues or suggestions, you can email us at <b>blazesoftworks7@gmail.com</b></p>\r\n                            <br />\r\n                            <p>We are not affiliated with either <i>Widgetbot</i> or <i>Discord</i>. You can learn more about <i>Widgetbot</i> and support them for extra features <b><a href=\"https://widgetbot.io/\" target=\"_blank\">here</a></b>.</p>\r\n                        </Card>\r\n\r\n                    </Layout.Section>\r\n\r\n                    <Layout.Section>\r\n                        <br />\r\n                        <Sticky offset>\r\n                            <div style={{ backgroundColor: '#99aab5', borderRadius: '10px' }}>\r\n                                <Stack distribution=\"center\" alignment=\"center\" vertical>\r\n                                    <DisplayText size=\"small\">Press the buttons bellow after every change to see the preview</DisplayText>\r\n                                    {/* <p>Press the button bellow after every change to see the preview</p> */}\r\n                                </Stack>\r\n                                <br />\r\n                                <Stack distribution=\"center\">\r\n                                    <ButtonGroup segmented>\r\n                                        <Button primary size=\"slim\" pressed={desktopPreview} onClick={() => { setDesktopPreview(true); if (valID != '') { returnIframe(true); setFirstRender(false); } }}>Generate Desktop</Button>\r\n                                        <Button primary size=\"slim\" pressed={!desktopPreview} onClick={() => { setDesktopPreview(false); if (valID != '') { returnIframe(false); setFirstRender(false); } }}>Generate Mobile</Button>\r\n                                    </ButtonGroup>\r\n                                    {\r\n                                        returnFirstIframe()\r\n                                    }\r\n                                </Stack>\r\n                                <br />\r\n                                <Stack distribution={(!desktopPreview) ? \"center\" : \"fill\"}>\r\n                                    <div id=\"previewdiv\">\r\n\r\n                                    </div>\r\n                                </Stack>\r\n                            </div>\r\n                        </Sticky>\r\n                    </Layout.Section>\r\n\r\n                    <div style={{\r\n                        position: 'fixed',\r\n                        zIndex: '99',\r\n                        bottom: '0',\r\n                        right: '0',\r\n                        padding: '1rem',\r\n                        height: '50px',\r\n                        width: '100%',\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        background: '#F4F6F8',\r\n                        borderTop: '1px solid #DFE3E8',\r\n                    }}>\r\n                        <div></div>\r\n                        <Button disabled={valID == ''} size=\"slim\" primary onClick={() => {\r\n                            makeApiCall(widgetObj, shopURL);\r\n                            setActive(true);\r\n                        }}>Save Settings</Button>\r\n                    </div>\r\n\r\n                    {/* <Layout.Section>\r\n                        <Card sectioned>\r\n                            <Button\r\n                                primary\r\n                                size=\"slim\"\r\n                                type=\"submit\"\r\n                                onClick={() => {\r\n                                    createScripts({\r\n                                        variables: {\r\n                                            input: {\r\n                                                src: urlScriptTags,\r\n                                                displayScope: \"ALL\"\r\n                                            }\r\n                                        },\r\n                                        refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\r\n                                    })\r\n                                }}>\r\n                                Create ScriptTag\r\n                        </Button>\r\n                        </Card>\r\n                        <Card>\r\n                            <ResourceList\r\n                                showHeader\r\n                                resourceName={{ singular: 'Script', plural: 'Scripts' }}\r\n                                items={data.scriptTags.edges}\r\n                                renderItem={item => {\r\n                                    return (\r\n                                        <ResourceList.Item\r\n                                            id={item.node.id}\r\n                                        >\r\n                                            <Stack>\r\n                                                <Stack.Item>\r\n                                                    <p>\r\n                                                        {item.node.id}\r\n                                                    </p>\r\n                                                </Stack.Item>\r\n                                                <Stack.Item>\r\n                                                    <Button type=\"submit\" onClick={() => {\r\n                                                        deleteScripts({\r\n                                                            variables: {\r\n                                                                id: item.node.id\r\n                                                            },\r\n                                                            refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\r\n                                                        })\r\n                                                    }}>\r\n                                                        Delete ScriptTag\r\n                                                </Button>\r\n                                                </Stack.Item>\r\n                                            </Stack>\r\n                                        </ResourceList.Item>\r\n                                    )\r\n                                }}\r\n                            />\r\n                        </Card>\r\n                    </Layout.Section> */}\r\n                </Layout >\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    backgroundColor: '#f4f6f8',\r\n                    width: '100%',\r\n                    marginTop: '20px',\r\n                    marginBottom: '77px',\r\n                    padding: '20px 24px 20px 0px'\r\n                }} />\r\n            </Page >\r\n        </Frame >\r\n    )\r\n}\r\n\r\nexport default ScriptPage;\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}