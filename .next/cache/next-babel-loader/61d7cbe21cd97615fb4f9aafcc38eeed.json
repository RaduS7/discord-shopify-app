{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getName{ \\n    shop { \\n      myshopifyDomain \\n    }      \\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Button, Card, Layout, Page, Stack, TextField, Banner, Frame, Toast } from '@shopify/polaris';\nimport gql from 'graphql-tag';\nimport React, { useState, useCallback } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nvar GET_STORE_NAME = gql(_templateObject());\n\nfunction AnnotatedLayout() {\n  _s();\n\n  var _useState = useState(false),\n      idset = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(''),\n      textFieldValue = _useState2[0],\n      setTextFieldValue = _useState2[1];\n\n  var _useState3 = useState(''),\n      textFieldValueOld = _useState3[0],\n      setTextFieldValueOld = _useState3[1];\n\n  var _useState4 = useState(''),\n      textFieldValue1 = _useState4[0],\n      setTextFieldValue1 = _useState4[1];\n\n  var _useState5 = useState(''),\n      textFieldValueOld1 = _useState5[0],\n      setTextFieldValueOld1 = _useState5[1];\n\n  var _useQuery = useQuery(GET_STORE_NAME),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState6 = useState(true),\n      first = _useState6[0],\n      setFirst = _useState6[1];\n\n  var handleTextFieldChange = useCallback(function (value) {\n    if (/^\\d+$/.test(value) || value == '') setTextFieldValue(value); //console.log(textFieldValue);\n  }, []);\n  var handleTextFieldChange1 = useCallback(function (value) {\n    if (/^\\d+$/.test(value) || value == '') setTextFieldValue1(value); //console.log(textFieldValue1);\n  }, []); //toast\n\n  var _useState7 = useState(false),\n      active = _useState7[0],\n      setActive = _useState7[1];\n\n  var toastMarkup = active ? __jsx(\"div\", {\n    style: {\n      zIndex: '999'\n    }\n  }, __jsx(Toast, {\n    content: \"Settings Saved\",\n    onDismiss: function onDismiss() {\n      setActive(!active);\n    }\n  })) : null;\n  if (loading) return __jsx(\"div\", null, \"Loading..\");else if (error) {\n    //console.log(Cookies.get(\"shopOrigin\"));\n    //location.replace(`https://discord-shopify-app.herokuapp.com/auth?shop=${Cookies.get(\"shopOrigin\")}`)\n    return __jsx(\"div\", null, error.message);\n  } // console.log(data.priceRules.edges[0].node.discountCodes.edges[0].node.id);\n  // console.log(data.priceRules.edges[0].node.discountCodes.edges[0].node.code);\n  //console.log(Cookie.get(\"shopOrigin\"))\n\n  axios.post(\"\".concat(Cookies.get(\"shopOrigin\"), \"/admin/api/2020-07/recurring_application_charges.json\"), {\n    \"recurring_application_charge\": {\n      \"name\": \"Super Duper Plan\",\n      \"price\": 10.0,\n      \"return_url\": \"http://super-duper.shopifyapps.com\",\n      \"capped_amount\": 100,\n      \"terms\": \"$1 for 1000 emails\"\n    }\n  }).then(function (result) {\n    ctx.body = result;\n  })[\"catch\"](function (e) {\n    ctx.body = e;\n  });\n  var sURL = String(data.shop.myshopifyDomain).substr(0, String(data.shop.myshopifyDomain).length - 14);\n\n  if (first) {\n    axios.get(\"/api/discordID/\".concat(sURL)).then(function (result) {\n      if (result.data.data.serverID != null) {\n        setId(true);\n        setTextFieldValue(result.data.data.serverID);\n        setTextFieldValue1(result.data.data.channelID);\n        setTextFieldValueOld(result.data.data.serverID);\n        setTextFieldValueOld1(result.data.data.channelID);\n      }\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n    setFirst(false);\n  }\n\n  return __jsx(Frame, null, __jsx(Page, {\n    title: \"Discordify Server/Channel ID\"\n  }, __jsx(Layout, null, toastMarkup, __jsx(Layout.Section, null, __jsx(Banner, {\n    status: idset ? \"success\" : \"critical\",\n    title: idset ? \"Server/Channel ID Set\" : \"No Server/Channel ID Set\"\n  })), __jsx(Layout.AnnotatedSection, {\n    title: \"Step One\",\n    description: __jsx(\"p\", null, \"Add Widgetbot to your server \", __jsx(\"a\", {\n      href: \"https://discord.com/oauth2/authorize?client_id=543225764036870167&scope=bot&permissions=537218112\",\n      target: \"_blank\"\n    }, __jsx(\"b\", null, \"here\")), \". Make sure you give Widgetbot all the permissions!\")\n  }, __jsx(Card, {\n    sectioned: true\n  }, __jsx(\"img\", {\n    src: \"dis1.PNG\",\n    width: \"100%\",\n    height: \"410\"\n  }))), __jsx(Layout.AnnotatedSection, {\n    title: \"Step Two\",\n    description: \"Type the ??guestmode command if you want people who don't have a discord account or are not already in your server to be able to choose a name on spot and write messages. Type ??help for a full list of commands.\"\n  }, __jsx(Card, {\n    sectioned: true\n  }, __jsx(\"img\", {\n    src: \"dis2.PNG\",\n    width: \"100%\",\n    height: \"410\"\n  }))), __jsx(Layout.AnnotatedSection, {\n    title: \"Step Three\",\n    description: \"Type the ??crate command in the text channel you want to display in the widget after it loads. Copy the values from Server and Channel without the quotes, paste them bellow and submit. You can always come back here to change the IDs\"\n  }, __jsx(Card, {\n    sectioned: true\n  }, __jsx(\"img\", {\n    src: \"dis3.PNG\",\n    width: \"100%\",\n    height: \"410\"\n  }))), __jsx(Layout.Section, null, __jsx(Card, {\n    sectioned: true\n  }, __jsx(Stack, {\n    spacing: \"extraLoose\"\n  }, __jsx(Stack.Item, {\n    fill: true\n  }, __jsx(TextField, {\n    label: \"Server ID\",\n    placeholder: \"Paste your Discord Server ID here\",\n    value: textFieldValue,\n    onChange: handleTextFieldChange\n  }))), __jsx(\"br\", null), __jsx(Stack, {\n    spacing: \"extraLoose\"\n  }, __jsx(Stack.Item, {\n    fill: true\n  }, __jsx(TextField, {\n    label: \"Channel ID\",\n    placeholder: \"Paste your Discord Channel ID here\",\n    value: textFieldValue1,\n    onChange: handleTextFieldChange1\n  }))), __jsx(\"br\", null), __jsx(Stack, {\n    distribution: \"trailing\"\n  }, __jsx(Button, {\n    primary: true,\n    disabled: (textFieldValue == '' || textFieldValueOld == textFieldValue) && (textFieldValue1 == '' || textFieldValueOld1 == textFieldValue1) ? true : false,\n    type: \"submit\",\n    onClick: function onClick() {\n      if (textFieldValue != '') {\n        setId(true);\n        setActive(true);\n        makeApiCall({\n          serverID: textFieldValue,\n          channelID: textFieldValue1\n        }, sURL);\n      } else {\n        alert(\"Please paste in your ID first\");\n      }\n    }\n  }, \"Submit\")))))));\n\n  function makeApiCall(_x, _x2) {\n    return _makeApiCall.apply(this, arguments);\n  }\n\n  function _makeApiCall() {\n    _makeApiCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appInfo, sURL) {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"/api/discordID/\".concat(sURL);\n              setTextFieldValueOld(textFieldValue);\n              setTextFieldValueOld1(textFieldValue1);\n              axios.post(url, appInfo).then(function (result) {})[\"catch\"](function (error) {\n                console.log(error.response);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _makeApiCall.apply(this, arguments);\n  }\n}\n\n_s(AnnotatedLayout, \"bw5mGhjdkPNd34ANLdEKqNmcTiA=\", false, function () {\n  return [useQuery];\n});\n\n_c = AnnotatedLayout;\nexport default AnnotatedLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnnotatedLayout\");","map":{"version":3,"sources":["D:/MyProjects/discord-app/pages/index.js"],"names":["Button","Card","Layout","Page","Stack","TextField","Banner","Frame","Toast","gql","React","useState","useCallback","useQuery","axios","Cookies","GET_STORE_NAME","AnnotatedLayout","idset","setId","textFieldValue","setTextFieldValue","textFieldValueOld","setTextFieldValueOld","textFieldValue1","setTextFieldValue1","textFieldValueOld1","setTextFieldValueOld1","loading","error","data","first","setFirst","handleTextFieldChange","value","test","handleTextFieldChange1","active","setActive","toastMarkup","zIndex","message","post","get","then","result","ctx","body","e","sURL","String","shop","myshopifyDomain","substr","length","serverID","channelID","console","log","makeApiCall","alert","appInfo","url","response"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Layout,\r\n  Page,\r\n  Stack,\r\n  TextField,\r\n  Banner,\r\n  Frame,\r\n  Toast,\r\n} from '@shopify/polaris';\r\nimport gql from 'graphql-tag'\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst GET_STORE_NAME = gql`\r\n  query getName{ \r\n    shop { \r\n      myshopifyDomain \r\n    }      \r\n  }\r\n`\r\n\r\nfunction AnnotatedLayout() {\r\n\r\n  const [idset, setId] = useState(false);\r\n  const [textFieldValue, setTextFieldValue] = useState('');\r\n  const [textFieldValueOld, setTextFieldValueOld] = useState('');\r\n  const [textFieldValue1, setTextFieldValue1] = useState('');\r\n  const [textFieldValueOld1, setTextFieldValueOld1] = useState('');\r\n  const { loading, error, data } = useQuery(GET_STORE_NAME);\r\n  const [first, setFirst] = useState(true);\r\n\r\n  const handleTextFieldChange = useCallback(\r\n    (value) => {\r\n      if (/^\\d+$/.test(value) || value == '')\r\n        setTextFieldValue(value);\r\n      //console.log(textFieldValue);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const handleTextFieldChange1 = useCallback(\r\n    (value) => {\r\n      if (/^\\d+$/.test(value) || value == '')\r\n        setTextFieldValue1(value);\r\n      //console.log(textFieldValue1);\r\n    },\r\n    [],\r\n  );\r\n\r\n  //toast\r\n  const [active, setActive] = useState(false);\r\n\r\n  const toastMarkup = active ? (\r\n    <div style={{ zIndex: '999' }}>\r\n      <Toast content=\"Settings Saved\" onDismiss={() => { setActive(!active) }} />\r\n    </div>\r\n  ) : null;\r\n\r\n  if (loading) return <div>Loading..</div>\r\n  else if (error) {\r\n    //console.log(Cookies.get(\"shopOrigin\"));\r\n    //location.replace(`https://discord-shopify-app.herokuapp.com/auth?shop=${Cookies.get(\"shopOrigin\")}`)\r\n    return <div>{error.message}</div>\r\n  }\r\n\r\n  // console.log(data.priceRules.edges[0].node.discountCodes.edges[0].node.id);\r\n  // console.log(data.priceRules.edges[0].node.discountCodes.edges[0].node.code);\r\n  //console.log(Cookie.get(\"shopOrigin\"))\r\n\r\n  axios.post(`${Cookies.get(\"shopOrigin\")}/admin/api/2020-07/recurring_application_charges.json`,\r\n    {\r\n      \"recurring_application_charge\": {\r\n        \"name\": \"Super Duper Plan\",\r\n        \"price\": 10.0,\r\n        \"return_url\": \"http://super-duper.shopifyapps.com\",\r\n        \"capped_amount\": 100,\r\n        \"terms\": \"$1 for 1000 emails\"\r\n      }\r\n    }\r\n  ).then((result) => {\r\n    ctx.body = result\r\n  }).catch((e) => {\r\n    ctx.body = e\r\n  })\r\n\r\n  const sURL = String(data.shop.myshopifyDomain).substr(0, String(data.shop.myshopifyDomain).length - 14)\r\n\r\n  if (first) {\r\n    axios.get(`/api/discordID/${sURL}`).then(result => {\r\n      if (result.data.data.serverID != null) {\r\n        setId(true);\r\n        setTextFieldValue(result.data.data.serverID);\r\n        setTextFieldValue1(result.data.data.channelID);\r\n        setTextFieldValueOld(result.data.data.serverID);\r\n        setTextFieldValueOld1(result.data.data.channelID);\r\n      }\r\n    }).catch(error => console.log(error));\r\n\r\n    setFirst(false);\r\n  }\r\n\r\n  return (\r\n    <Frame>\r\n      <Page title=\"Discordify Server/Channel ID\" >\r\n        <Layout>\r\n          {toastMarkup}\r\n          <Layout.Section >\r\n            <Banner\r\n              status={(idset) ? \"success\" : \"critical\"}\r\n              title={(idset) ? \"Server/Channel ID Set\" : \"No Server/Channel ID Set\"}\r\n            >\r\n            </Banner>\r\n          </Layout.Section>\r\n          <Layout.AnnotatedSection title=\"Step One\" description={<p>Add Widgetbot to your server <a href=\"https://discord.com/oauth2/authorize?client_id=543225764036870167&scope=bot&permissions=537218112\" target=\"_blank\"><b>here</b></a>. Make sure you give Widgetbot all the permissions!</p>}>\r\n            <Card sectioned >\r\n              <img src=\"dis1.PNG\" width=\"100%\" height=\"410\" />\r\n            </Card>\r\n          </Layout.AnnotatedSection>\r\n          <Layout.AnnotatedSection title=\"Step Two\" description=\"Type the ??guestmode command if you want people who don't have a discord account or are not already in your server to be able to choose a name on spot and write messages. Type ??help for a full list of commands.\">\r\n            <Card sectioned >\r\n              <img src=\"dis2.PNG\" width=\"100%\" height=\"410\" />\r\n            </Card>\r\n          </Layout.AnnotatedSection>\r\n          <Layout.AnnotatedSection title=\"Step Three\" description='Type the ??crate command in the text channel you want to display in the widget after it loads. Copy the values from Server and Channel without the quotes, paste them bellow and submit. You can always come back here to change the IDs'>\r\n            < Card sectioned >\r\n              <img src=\"dis3.PNG\" width=\"100%\" height=\"410\" />\r\n            </Card>\r\n          </Layout.AnnotatedSection>\r\n          <Layout.Section>\r\n            <Card sectioned>\r\n              <Stack spacing=\"extraLoose\">\r\n                <Stack.Item fill>\r\n                  <TextField\r\n                    label=\"Server ID\"\r\n                    placeholder=\"Paste your Discord Server ID here\"\r\n                    value={textFieldValue}\r\n                    onChange={handleTextFieldChange}\r\n                  >\r\n                  </TextField>\r\n                </Stack.Item>\r\n              </Stack>\r\n              <br />\r\n              <Stack spacing=\"extraLoose\">\r\n                <Stack.Item fill>\r\n                  <TextField\r\n                    label=\"Channel ID\"\r\n                    placeholder=\"Paste your Discord Channel ID here\"\r\n                    value={textFieldValue1}\r\n                    onChange={handleTextFieldChange1}\r\n                  >\r\n                  </TextField>\r\n                </Stack.Item>\r\n              </Stack>\r\n              <br />\r\n              <Stack distribution=\"trailing\">\r\n                <Button\r\n                  primary\r\n                  disabled={((textFieldValue == '' || textFieldValueOld == textFieldValue) && (textFieldValue1 == '' || textFieldValueOld1 == textFieldValue1)) ? true : false}\r\n                  type=\"submit\"\r\n                  onClick={() => {\r\n                    if (textFieldValue != '') {\r\n                      setId(true);\r\n                      setActive(true);\r\n                      makeApiCall({ serverID: textFieldValue, channelID: textFieldValue1 }, sURL);\r\n                    }\r\n                    else {\r\n                      alert(\"Please paste in your ID first\");\r\n                    }\r\n                  }}>\r\n                  Submit\r\n                </Button>\r\n              </Stack>\r\n            </Card>\r\n          </Layout.Section>\r\n        </Layout>\r\n      </Page >\r\n    </Frame>\r\n  )\r\n\r\n  async function makeApiCall(appInfo, sURL) {\r\n    const url = `/api/discordID/${sURL}`;\r\n    setTextFieldValueOld(textFieldValue);\r\n    setTextFieldValueOld1(textFieldValue1);\r\n    axios.post(url, appInfo).then((result) => { }).catch((error) => { console.log(error.response) });\r\n  }\r\n}\r\n\r\nexport default AnnotatedLayout;"]},"metadata":{},"sourceType":"module"}